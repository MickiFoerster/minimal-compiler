%{
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstdarg>
#include "yystype.h"
using namespace std;

%}


%token COND
%token SEQSTMTS
%token WHILE
%token DO
%token ENDWHILE
%token IF
%token THEN
%token ENDIF
%token IDENTIFIER
%token LHS
%token RHS


%%

code: 
  seq_of_stmts { cout << "START\n"; cout << *$1; cout << "END\n"; }
  ;

seq_of_stmts: 
	stmt                 { $$=$1; }
  | seq_of_stmts  stmt   { $$=new string(*$1 + *$2); }
  ;

stmt:
	assignment  { $$=$1; }
  | IF COND THEN seq_of_stmts ENDIF     { $$=new string(sigma_if(*$2, *$4)); }
  | WHILE COND DO seq_of_stmts ENDWHILE { $$=new string(sigma_while(*$2, *$4)); }
  ;

assignment:
	LHS '=' RHS ';' { $$=new string(sigma_assign(*$1, *$3)); }
  ;


%%

void
info(const char *s, ...)
{
	va_list params;
	va_start(params, s);
	fprintf(stderr, "%d: info: ", yylineno);
	vfprintf(stderr, s, params);
	fprintf(stderr, "\n");
}

void
yyerror(const char *s, ...)
{
	va_list params;
	va_start(params, s);
	fprintf(stderr, "%d: error: ", yylineno);
	vfprintf(stderr, s, params);
	fprintf(stderr, "\n");
}


int
main(int argc, char **argv)
{
	int i, rc=0, files=0;
	yylineno = 1;
	rc=yyparse();
	if(!rc) { 
		printf("All input has been parsed successful.\n"); 
	}
	else
		printf("There was a parsing error. Check syntax and try again.\n");
	return rc;
}
 
